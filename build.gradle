plugins {
    alias(libs.plugins.shadow)
    alias(libs.plugins.versions.plug)
    id 'distribution'
    id 'java'
}

// dependencies
repositories {
    mavenCentral()
}

dependencies {
    implementation(libs.jacop)
    runtimeOnly(libs.sqlite.jdbc)
}

// java plugin
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named("compileJava") {
    options.encoding = 'UTF-8'
}

tasks.named("jar") {
    manifest {
        attributes(
            "Implementation-Title": title,
            "Implementation-Version": version,
            "Main-Class": mainClass
        )
    }
}

// distribution plugin
distributions {
    main {
        contents { from shadowJar }
    }
}

// shadow plugin
tasks.named("shadowJar") {
    archiveClassifier = ''
    minimize {
        // runtimeOnly deps must be excluded from minimize
        exclude(dependency("org.xerial:sqlite-jdbc:.*"))
    }
}

// versions plugin
tasks.named("dependencyUpdates") {
    // disable file output
    outputFormatter = ""

    // ignore pre-release gradle
    gradleReleaseChannel = "current"

    // ignore pre-release libs
    ext.isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { itm -> version.toUpperCase().contains(itm) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }

    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
